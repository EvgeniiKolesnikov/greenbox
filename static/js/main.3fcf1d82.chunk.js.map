{"version":3,"sources":["types/user.ts","store/reducers/customerReducer.ts","store/action-creators/user.ts","types/todo.ts","store/action-creators/todo.ts","store/action-creators/index.ts","hooks/useActions.ts","hooks/useTypedSelector.ts","components/UserList.tsx","components/TodoList.tsx","App.tsx","asyncActions/customers.ts","store/reducers/cashReducer.ts","store/reducers/userReducer.ts","store/reducers/todoReducer.ts","store/reducers/index.ts","index.tsx"],"names":["UserActionTypes","defaultState","customers","loading","error","ADD_CUSTOMER","ADD_MANY_CUSTOMERS","REMOVE_CUSTOMERS","TodoActionTypes","fetchUsers","dispatch","a","type","FETCH_USERS","axios","get","response","FETCH_USERS_SUCCESS","payload","data","FETCH_USERS_ERROR","url","fetchTodos","page","limit","FETCH_TODOS","params","_page","_limit","FETCH_TODOS_SUCCESS","FETCH_TODOS_ERROR","setTodoPage","SET_TODO_PAGE","TodoActionCreators","UserActionCreators","useActions","useDispatch","bindActionCreators","ActionCreators","useTypedSelector","useSelector","UserList","state","user","users","useEffect","console","log","map","name","id","TodoList","todo","todos","title","style","display","justifyContent","p","border","padding","onClick","App","useState","setTitle","cash","addCustomer","customer","Date","now","removeCustomer","className","value","placeholder","onChange","e","target","onKeyPress","key","addCash","Number","prompt","getCash","String","fetch","then","json","length","initialState","rootReducer","combineReducers","action","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fcf1d82.chunk.js","sourcesContent":["export interface UserState {\r\n  users: any[];\r\n  loading: boolean;\r\n  error: null | string;\r\n}\r\n\r\nexport enum UserActionTypes {\r\n  FETCH_USERS = 'FETCH_USERS',\r\n  FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS',\r\n  FETCH_USERS_ERROR = 'FETCH_USERS_ERROR',\r\n}\r\n\r\ninterface FetchUsersAction {\r\n  type: UserActionTypes.FETCH_USERS; // type: typeof FETCH_USERS;\r\n}\r\n\r\ninterface FetchUsersSuccessAction {\r\n  type: UserActionTypes.FETCH_USERS_SUCCESS;\r\n  payload: any[];\r\n}\r\n\r\ninterface FetchUsersErrorAction {\r\n  type: UserActionTypes.FETCH_USERS_ERROR;\r\n  payload: string;\r\n}\r\n\r\nexport type UserAction =\r\n  | FetchUsersAction\r\n  | FetchUsersSuccessAction\r\n  | FetchUsersErrorAction;\r\n","interface CustomerState {\r\n  customers: any[];\r\n  loading: boolean;\r\n  error: null | string;\r\n}\r\n\r\nconst defaultState: CustomerState = {\r\n  customers: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport interface CustomerAction {\r\n  type: string;\r\n  payload: any | any[];\r\n}\r\n\r\nconst ADD_CUSTOMER = 'ADD_CUSTOMER';\r\nconst ADD_MANY_CUSTOMERS = 'ADD_MANY_CUSTOMERS';\r\nconst REMOVE_CUSTOMERS = 'REMOVE_CUSTOMERS';\r\n\r\nexport const customerReducer = (\r\n  state = defaultState,\r\n  action: CustomerAction\r\n): CustomerState => {\r\n  switch (action.type) {\r\n    case ADD_MANY_CUSTOMERS:\r\n      return { ...state, customers: [...state.customers, ...action.payload] };\r\n    case ADD_CUSTOMER:\r\n      return { ...state, customers: [...state.customers, action.payload] };\r\n    case REMOVE_CUSTOMERS:\r\n      return {\r\n        ...state,\r\n        customers: state.customers.filter(\r\n          (customer: { id: { name: string; id: any } }) =>\r\n            customer.id !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addCustomerAction = (payload: any) => ({\r\n  type: ADD_CUSTOMER,\r\n  payload,\r\n});\r\n\r\nexport const addManyCustomersAction = (payload: any[]) => ({\r\n  type: ADD_MANY_CUSTOMERS,\r\n  payload,\r\n});\r\n\r\nexport const removeCustomerAction = (payload: any) => ({\r\n  type: REMOVE_CUSTOMERS,\r\n  payload,\r\n});\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { UserAction, UserActionTypes } from '../../types/user';\r\n\r\nconst url = 'https://jsonplaceholder.typicode.com/users';\r\n\r\nexport const fetchUsers = () => {\r\n  return async (dispatch: Dispatch<UserAction>) => {\r\n    try {\r\n      dispatch({ type: UserActionTypes.FETCH_USERS });\r\n\r\n      // const response = await fetch(url)\r\n      //   .then((response) => response.json())\r\n      //   .then((data) => dispatch({\r\n      //     type: UserActionTypes.FETCH_USERS_SUCCESS,\r\n      //     payload: data,\r\n      //   }));\r\n\r\n      const response = await axios.get<object[]>(url);\r\n      dispatch({\r\n        type: UserActionTypes.FETCH_USERS_SUCCESS,\r\n        payload: response.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: UserActionTypes.FETCH_USERS_ERROR,\r\n        payload: 'Произошла ошибка при загрузке пользователей',\r\n      });\r\n    }\r\n  };\r\n};\r\n","export interface TodoState {\r\n  todos: any[];\r\n  loading: boolean;\r\n  error: null | string;\r\n  page: number;\r\n  limit: number;\r\n}\r\n\r\nexport enum TodoActionTypes {\r\n  FETCH_TODOS = 'FETCH_TODOS',\r\n  FETCH_TODOS_SUCCESS = 'FETCH_TODOS_SUCCESS',\r\n  FETCH_TODOS_ERROR = 'FETCH_TODOS_ERROR',\r\n  SET_TODO_PAGE = 'SET_TODO_PAGE',\r\n}\r\n\r\ninterface FetchUsersAction {\r\n  type: TodoActionTypes.FETCH_TODOS; // type: typeof FETCH_TODOS;\r\n}\r\n\r\ninterface FetchUsersSuccessAction {\r\n  type: TodoActionTypes.FETCH_TODOS_SUCCESS;\r\n  payload: any[];\r\n}\r\n\r\ninterface FetchUsersErrorAction {\r\n  type: TodoActionTypes.FETCH_TODOS_ERROR;\r\n  payload: string;\r\n}\r\ninterface SetTodoPage {\r\n  type: TodoActionTypes.SET_TODO_PAGE;\r\n  payload: number;\r\n}\r\n\r\nexport type TodoAction =\r\n  | FetchUsersAction\r\n  | FetchUsersSuccessAction\r\n  | FetchUsersErrorAction\r\n  | SetTodoPage;\r\n","import axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\nimport { TodoAction, TodoActionTypes } from '../../types/todo';\r\n\r\nconst url = 'https://jsonplaceholder.typicode.com/todos';\r\n\r\nexport const fetchTodos = (page = 1, limit = 10) => {\r\n  return async (dispatch: Dispatch<TodoAction>) => {\r\n    try {\r\n      dispatch({ type: TodoActionTypes.FETCH_TODOS });\r\n      const response = await axios.get<any[]>(url, {\r\n        params: { _page: page, _limit: limit },\r\n      });\r\n      dispatch({\r\n        type: TodoActionTypes.FETCH_TODOS_SUCCESS,\r\n        payload: response.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: TodoActionTypes.FETCH_TODOS_ERROR,\r\n        payload: 'Произошла ошибка при загрузке',\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport function setTodoPage(page: number): TodoAction {\r\n  return { type: TodoActionTypes.SET_TODO_PAGE, payload: page };\r\n}\r\n","import * as UserActionCreators from './user';\r\nimport * as TodoActionCreators from './todo';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  ...TodoActionCreators,\r\n  ...UserActionCreators,\r\n};\r\n","import { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport ActionCreators from '../store/action-creators/';\r\n\r\nexport const useActions = () => {\r\n  const dispatch = useDispatch();\r\n  return bindActionCreators(ActionCreators, dispatch);\r\n};\r\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { RootState } from '../store/reducers';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { FC, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useActions } from '../hooks/useActions';\r\n// import { useSelector } from 'react-redux';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport { fetchUsers } from '../store/action-creators/user';\r\n\r\nexport const UserList: FC = () => {\r\n  // const state = useSelector(state => state)\r\n  const { users, loading, error } = useTypedSelector((state) => state.user);\r\n  const { fetchUsers } = useActions();\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>error...</h1>;\r\n  }\r\n\r\n  console.log('users: ', users);\r\n  console.log('loading: ', loading);\r\n  console.log('error: ', error);\r\n\r\n  return (\r\n    <div>\r\n      {users.map((user) => (\r\n        <div key={user.id}>{user.name}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useActions } from '../hooks/useActions';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\n\r\nexport const TodoList: React.FC = () => {\r\n  const { page, limit, error, loading, todos } = useTypedSelector(\r\n    (state) => state.todo\r\n  );\r\n\r\n  const { fetchTodos, setTodoPage } = useActions();\r\n  const pages = [1, 2, 3, 4, 5];\r\n\r\n  useEffect(() => {\r\n    fetchTodos(page, limit);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [page]);\r\n\r\n  if (loading) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n\r\n  if (error) {\r\n    return <h1>error...</h1>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {todos.map((todo) => (\r\n        <div key={todo.id}>\r\n          {todo.id} - {todo.title}\r\n        </div>\r\n      ))}\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        {pages.map((p) => (\r\n          <div\r\n            style={{\r\n              border: p === page ? '2px solid green' : '1px solid grey',\r\n              padding: 10,\r\n            }}\r\n            onClick={() => setTodoPage(p)}\r\n          >\r\n            {p}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  addCustomerAction,\n  removeCustomerAction,\n} from './store/reducers/customerReducer';\nimport { fetchCustomers } from './asyncActions/customers';\nimport { UserList } from './components/UserList';\nimport { AppDispatch, RootState } from './store/reducers';\nimport { TodoList } from './components/TodoList';\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState<string>('');\n  const dispatch = useDispatch<AppDispatch>();\n  const cash = useSelector((state: RootState) => state.cash.cash);\n  const customers = useSelector(\n    (state: RootState) => state.customers.customers\n  );\n  console.log(cash);\n\n  const addCash = (cash: number) => {\n    dispatch({ type: 'ADD_CASH', payload: cash });\n  };\n\n  const getCash = (cash: number) => {\n    dispatch({ type: 'GET_CASH', payload: cash });\n  };\n\n  const addCustomer = (name: string) => {\n    const customer = { name, id: Date.now() };\n    dispatch(addCustomerAction(customer));\n  };\n\n  const removeCustomer = (customer: { name: string; id: any }) => {\n    dispatch(removeCustomerAction(customer.id));\n  };\n\n  const changeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  };\n\n  const onKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      console.log(title);\n    }\n  };\n\n  return (\n    <div className='App'>\n      <div>Greenbox</div>\n      <UserList />\n      <hr />\n      <TodoList />\n      <input\n        type='text'\n        id='title'\n        value={title}\n        placeholder='add some text'\n        onChange={changeHandler}\n        onKeyPress={onKeyPress}\n      />\n\n      <div className='cash'>cash: {cash}</div>\n      <div onClick={() => addCash(Number(prompt()))}>add Cash</div>\n      <div onClick={() => getCash(Number(prompt()))}>get Cash</div>\n      <div onClick={() => addCustomer(String(prompt()))}>add Customer</div>\n      <div onClick={() => dispatch<any>(fetchCustomers())}>\n        Get users from json\n      </div>\n\n      {customers.length > 0 ? (\n        <div>\n          {customers.map((customer) => (\n            <div onClick={() => removeCustomer(customer)} key={customer.id}>\n              {customer.name}\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div>No customers</div>\n      )}\n    </div>\n  );\n};\n","import { Dispatch } from 'redux';\r\nimport { addManyCustomersAction, CustomerAction } from '../store/reducers/customerReducer';\r\n\r\nexport const fetchCustomers = () => {\r\n  return async (dispatch: Dispatch<CustomerAction>) => {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then((response) => response.json())\r\n      .then((json) => dispatch(addManyCustomersAction(json)));\r\n  };\r\n};\r\n","// action = {type: '', payload: '?'}\r\n\r\nconst defaultState = {\r\n  cash: 5,\r\n};\r\n\r\nexport const cashReducer = (\r\n  state = defaultState,\r\n  action: { type: string; payload: number }\r\n) => {\r\n  switch (action.type) {\r\n    case 'ADD_CASH':\r\n      return { ...state, cash: state.cash + action.payload };\r\n    case 'GET_CASH':\r\n      return { ...state, cash: state.cash - action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { UserAction, UserActionTypes, UserState } from '../../types/user';\r\n\r\nconst initialState: UserState = {\r\n  users: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const userReducer = (\r\n  state = initialState,\r\n  action: UserAction\r\n): UserState => {\r\n  switch (action.type) {\r\n    case UserActionTypes.FETCH_USERS:\r\n      return { loading: true, error: null, users: [] };\r\n    case UserActionTypes.FETCH_USERS_SUCCESS:\r\n      return { loading: false, error: null, users: action.payload };\r\n    case UserActionTypes.FETCH_USERS_ERROR:\r\n      return { loading: false, error: action.payload, users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { TodoAction, TodoActionTypes, TodoState } from '../../types/todo';\r\n\r\nconst initialState: TodoState = {\r\n  todos: [],\r\n  page: 1,\r\n  limit: 10,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const todoReducer = (\r\n  state = initialState,\r\n  action: TodoAction\r\n): TodoState => {\r\n  switch (action.type) {\r\n    case TodoActionTypes.FETCH_TODOS:\r\n      return { ...state, loading: true };\r\n    case TodoActionTypes.FETCH_TODOS_SUCCESS:\r\n      return { ...state, loading: false, todos: action.payload };\r\n    case TodoActionTypes.FETCH_TODOS_ERROR:\r\n      return { ...state, loading: false, error: action.payload };\r\n    case TodoActionTypes.SET_TODO_PAGE:\r\n      return { ...state, page: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { cashReducer } from './cashReducer';\r\nimport { customerReducer } from './customerReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { userReducer } from './userReducer';\r\nimport { todoReducer } from './todoReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  cash: cashReducer,\r\n  customers: customerReducer,\r\n  todo: todoReducer,\r\n  user: userReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store/reducers';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}